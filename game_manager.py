from game_state import GameState
from pacman import PacMan
from ghost import Ghost


class GameManager:
    def __init__(self, maze):
        self.pacman = PacMan(1, 1, self)
        self.ghosts = [Ghost(6, 5), Ghost(8, 5), Ghost(10, 5)]
        self.maze = maze
        self.game_state = GameState()
        self.game_over = False

    def update_game(self):
        """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É"""
        if self.game_over:
            return

        for ghost in self.ghosts:
            ghost.update(self)  # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –ø—Ä–∏–≤–∏–¥—ñ–≤
            ghost.move(self.maze)  # –†—É—Ö–∞—î–º–æ –ø—Ä–∏–≤–∏–¥—ñ–≤

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è Pac-Man –∑ –ø—Ä–∏–≤–∏–¥–∞–º–∏
        if any(g.x == self.pacman.x and g.y ==
               self.pacman.y for g in self.ghosts):
            if self.pacman.power_mode:
                print("üåÄ Pac-Man –∑'—ó–≤ –ø—Ä–∏–≤–∏–¥–∞!")
                self.pacman.update()  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É Pac-Man
                for ghost in self.ghosts:
                    if ghost.x == self.pacman.x and ghost.y == self.pacman.y:
                        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–∏–≤–∏–¥–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É –ø–æ–∑–∏—Ü—ñ—é
                        ghost.x, ghost.y = 6, 5
                        ghost.eatable = False
                        ghost.color = (255, 0, 0)  # –ü—Ä–∏–≤–∏–¥ –∑–Ω–æ–≤—É —Å—Ç–∞—î —á–µ—Ä–≤–æ–Ω–∏–º
                        self.pacman.score += 200
            else:
                print(f"‚ùå Pac-Man –∑'—ó–¥–µ–Ω–∏–π! –ñ–∏—Ç—Ç—ñ–≤ –∑–∞–ª–∏—à–∏–ª–æ—Å—å: "
                      f"{self.pacman.lives - 1}")

                self.pacman.lives -= 1
                if self.pacman.lives <= 0:
                    self.game_over = True
                    print("‚ùå –ì–†–ê –ó–ê–ö–Ü–ù–ß–ï–ù–ê! Pac-Man –ø—Ä–æ–≥—Ä–∞–≤!")
                    return

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–º–æ–≥–∏
        if self.check_win_condition():
            self.game_over = True
            print("üéâ –í–Ü–¢–ê–Ñ–ú–û! Pac-Man –≤–∏–≥—Ä–∞–≤!")

    def check_win_condition(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –≤—Å—ñ —Ç–æ—á–∫–∏ –∑—ñ–±—Ä–∞–Ω—ñ"""
        for row in self.maze.grid:
            if '.' in row or 'O' in row:
                return False
        return True
